@use "sass:math";
@use "sass:map";

$values: (50, 100, 200, 300, 400, 500, 600, 700, 800, 900, A100, A200, A400, A700);

@function createPalette($color) {
    $white: #fff;
    $black: #000;
    $baseDark: multiply($color, $color);

    $palette: (
        50: mix($color, $white, 12%),
        100: mix($color, $white, 30%),
        200: mix($color, $white, 50%),
        300: mix($color, $white, 70%),
        400: mix($color, $white, 85%),
        500: mix($color, $white, 100%),
        600: mix($color, $baseDark, 87%),
        700: mix($color, $baseDark, 70%),
        800: mix($color, $baseDark, 54%),
        900: mix($color, $baseDark, 25%),
        1000: mix($color, $baseDark, 5%),
        A100: lighten(saturate(mix($black, $baseDark, 15%), 80%), 65%),
        A200: lighten(saturate(mix($black, $baseDark, 15%), 80%), 55%),
        A400: lighten(saturate(mix($black, $baseDark, 15%), 100%), 45%),
        A700: lighten(saturate(mix($black, $baseDark, 15%), 100%), 40%),
    );

    $contrast: ();
    @each $v in $values {
        $contrast: map.merge(
            $contrast,
            (
                $v: getContrast(map_get($palette, $v)),
            )
        );
    }

    $palette: map.merge(
        $palette,
        (
            contrast: $contrast,
        )
    );

    @return $palette;
}

@function multiply($rgb1, $rgb2) {
    $r: math.floor(calc(red($rgb1) * red($rgb2) / 255));
    $g: math.floor(calc(green($rgb1) * green($rgb2) / 255));
    $b: math.floor(calc(blue($rgb1) * blue($rgb2) / 255));
    @return rgb($r, $g, $b);
}

@function getBrightness($color) {
    @return calc((red($color) * 299 + green($color) * 587 + blue($color) * 114) / 1000);
}

@function isLight($color) {
    @return getBrightness($color) >= 128;
}

@function getContrast($color) {
    @if isLight($color) {
        @return #000;
    } @else {
        @return #fff;
    }
}

// Example: Set your color variables

$color--gray: #888888;
$color--blue: #3366ff;
$color--teal: #43e7f9;
$color--green: #5bd642;
$color--orange: #ffae18;
$color--red: #ff5353;

$primary-color: #ed6a45;
$secondary-color: #4551ed;
$third-color: #83ed45;
$fourth-color: #45ed86;
$fifth-color: #45c1ed;

$primary-palette: createPalette($primary-color);
$primary: map_get($primary-palette, 500);

$secondary-palette: createPalette($secondary-color);
$secondary: map_get($secondary-palette, 500);

$third-palette: createPalette($third-color);
$third: map_get($third-palette, 500);

$fourth-palette: createPalette($fourth-color);
$fourth: map_get($fourth-palette, 500);

$fifth-palette: createPalette($fifth-color);
$fifth: map_get($fifth-palette, 500);

$white: #fff;
$black: #000;
$dark: #080522;

$text-color: $white;

// Actual theme colors
$background: linear-gradient(300deg, #07172e 0%, #242d4d 50%, #220933 100%);
$background-transparent: rgba($white, 0.8);

// Font
$font-family: "Outfit", sans-serif;

$text-max: 4rem;
$title-big: math.div($text-max, 1.1);
$title-medium: math.div($text-max, 1.2);
$title-small: math.div($text-max, 1.3);

$text-very-big: math.div($text-max, 3.2);
$text-big: math.div($text-max, 3.7);
$text-medium: math.div($text-max, 4.2);
$text-small: math.div($text-max, 4.7);

// Breakpoints
$extra-large: 1400px;
$large: 1200px;
$medium: 992px;
$small: 768px;
$extra-small: 576px;
